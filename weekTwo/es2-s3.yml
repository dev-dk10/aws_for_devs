Description: Learn S3 

Metadata:
  Instances:
    Description: EC2Instance

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: KeyExample

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
        - Ref: SSHSecurityGroup
        - Ref: HTTPSecurityGroup
      KeyName:
        Ref: KeyName
      ImageId: ami-0518bb0e75d3619ca
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData: !Base64 |
        #!/bin/bash -x
        yum -y update
        yum -y install httpd
        wget â€“P /var/www/html/ https://dkushnirov-s3-week2.s3-us-west-2.amazonaws.com/index.html
        sudo service httpd start
        chkonfig httpd on

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  HTTPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: "S3Role"

  S3Policy:
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "root"
      PolicyDocument: 
        Statement: 
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles: 
        - Ref: "S3Role"

  S3Role:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
 
Outputs:
  PublicIp:
    Description: EC2Instance public ip
    Value: !GetAtt EC2Instance.PublicIp